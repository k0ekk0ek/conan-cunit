--- source_subfolder/CUnit/Sources/Console/Console.c	2014-04-24 02:54:45.000000000 +0200
+++ source_subfolder/CUnit/Sources/Console/Console.c.patched	2020-07-29 23:18:15.491552571 +0200
@@ -476,7 +476,7 @@
 {
   CU_pSuite pCurSuite = NULL;
   int i;
-  static size_t width[6];
+  static int width[6];
 
   if (NULL == pRegistry) {
     pRegistry = CU_get_registry();
@@ -492,7 +492,7 @@
 
   /* only need to calculate formatting widths once */
   if (0 == width[0]) {
-    width[0] = CU_number_width(pRegistry->uiNumberOfSuites) + 1;
+    width[0] = (int)CU_number_width(pRegistry->uiNumberOfSuites) + 1;
     width[1] = 34;
     width[2] = CU_MAX(strlen(_("Init?")), CU_MAX(f_yes_width, f_no_width)) + 1;
     width[3] = CU_MAX(strlen(_("Cleanup?")), CU_MAX(f_yes_width, f_no_width)) + 1;
@@ -533,7 +533,7 @@
 {
   CU_pTest pCurTest = NULL;
   unsigned int uiCount;
-  static size_t width[3];
+  static int width[3];
 
   assert(NULL != pSuite);
   assert(NULL != pSuite->pName);
--- source_subfolder/CUnit/Sources/Curses/Curses.c	2014-04-24 02:54:45.000000000 +0200
+++ source_subfolder/CUnit/Sources/Curses/Curses.c.patched	2020-07-29 23:52:03.641780351 +0200
@@ -736,8 +736,8 @@
       }
       else {
         list_tests(pSuite);
-        snprintf(szTemp, STRING_LENGTH, "%s",
-                                        _("Enter number of test to select (1-%u) : "),
+        snprintf(szTemp, STRING_LENGTH, "%s (1-%u) : ",
+                                        _("Enter number of test to select"),
                                         pRegistry->uiNumberOfSuites);
         read_input_string(szTemp, szTestNumber, STRING_LENGTH);
         test_num = atol(szTestNumber);
@@ -769,8 +769,8 @@
       else {
         while (1) {
           list_tests(pSuite);
-          snprintf(szTemp, STRING_LENGTH, "%s",
-                                          _("Enter number of test to select (1-%u) : "),
+          snprintf(szTemp, STRING_LENGTH, "%s (1-%u) : ",
+                                          _("Enter number of test to select"),
                                           pRegistry->uiNumberOfSuites);
           read_input_string(szTemp, szTestNumber, STRING_LENGTH);
           test_num = atol(szTestNumber);
@@ -976,7 +976,7 @@
   CU_pSuite pCurSuite = NULL;
   int i;
   char szTemp[STRING_LENGTH];
-  static size_t width[6];
+  static int width[6];
 
   if (NULL == pRegistry) {
     pRegistry = CU_get_registry();
@@ -1042,7 +1042,7 @@
   CU_pTest pCurTest = NULL;
   unsigned int i;
   char szTemp[STRING_LENGTH];
-  static size_t width[3];
+  static int width[3];
 
   assert(NULL != pSuite);
   assert(NULL != pSuite->pName);
--- source_subfolder/CUnit/Sources/Framework/MyMem.c	2014-04-24 02:54:45.000000000 +0200
+++ source_subfolder/CUnit/Sources/Framework/MyMem.c.patched	2020-07-29 23:22:05.842770792 +0200
@@ -360,7 +360,7 @@
     pTempEvent = pTempNode->pFirstEvent;
     while (NULL != pTempEvent) {
       fprintf(pFile, "\n      <MD_EVENT_RECORD>");
-      fprintf(pFile, "\n        <MD_SIZE> %u </MD_SIZE>", pTempEvent->Size);
+      fprintf(pFile, "\n        <MD_SIZE> %u </MD_SIZE>", (unsigned int)pTempEvent->Size);
       fprintf(pFile, "\n        <MD_ALLOC_FILE> %s </MD_ALLOC_FILE>", pTempEvent->AllocFilename);
       fprintf(pFile, "\n        <MD_ALLOC_LINE> %u </MD_ALLOC_LINE>", pTempEvent->AllocLine);
       fprintf(pFile, "\n        <MD_DEALLOC_FILE> %s </MD_DEALLOC_FILE>", pTempEvent->DeallocFilename);
--- source_subfolder/CUnit/Sources/Framework/TestRun.c	2014-04-24 02:54:45.000000000 +0200
+++ source_subfolder/CUnit/Sources/Framework/TestRun.c.patched	2020-07-29 23:21:36.771870514 +0200
@@ -565,7 +565,7 @@
 {
   CU_pRunSummary pRunSummary = &f_run_summary;
   CU_pTestRegistry pRegistry = CU_get_registry();
-  size_t width[9];
+  int width[9];
   size_t len;
   char *result;
 
